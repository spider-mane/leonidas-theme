#!/usr/bin/env php
<?php

use Faker\Factory;

$root = dirname(__DIR__, 1);

require_once $root . '/tests/bootstrap.php';

################################################################################
# Config
################################################################################
$testDir = $root . '/build/test-prefill';
$prefill = $testDir . '/bin/prefill';
$faker = Factory::create();

$exclude = array_merge(
  [
    '@playground',
    '.idea',
    '.project',
    '.vscode',
    'assets/build',
    'assets/dist',
    'assets/node_modules',
    'assets/package-lock.json',
    'build',
    'logs',
    'composer.lock',
    'vendor',
    'wordpress',
    'pathagist.json',
    'docker-compose.override.yml',
  ],
  glob("*.code-workspace"),
  glob("**/*.code-workspace"),
);

$answers = [
  'authorName' => $faker->name(),
  'authorEmail' => $faker->email(),
  'authorGithub' => $faker->slug(random_int(1, 3)),

  'themeName' => ucwords($faker->words(random_int(1, 5), true)),
  'themeSlug' => $faker->slug(random_int(1, 3)),
  'themePrefix' => $faker->lexify(),
  'themeVersion' => $faker->semver(),
  'themeWebsite' => $faker->url(),
  'themeDescription' => $faker->sentence(random_int(10, 20)),

  'psr4Namespace' => implode('\\', array_map('ucwords', $faker->words(2))),
];

################################################################################
# Run
################################################################################
$exclude = array_map(fn ($file) => "{$root}/{$file}", $exclude);
// $answers = implode('\n', $answers);

if (file_exists($testDir)) {
  shell_exec("rm -rf {$testDir}");
}

mkdir($testDir, 0777, true);
__testprefill_copy_files($root, $testDir, $exclude);
chdir($testDir);

(function ($__prefill__, $__answers__) {
  extract($__answers__);
  shell_exec('composer dumpautoload');

  require_once $__prefill__;
})($prefill, $answers);

################################################################################
# Functions
################################################################################
function __testprefill_copy_files(string $dir, string $copyDir, array $exclude = [], string $sub = null): void
{
  $currentDir = $sub ?? $dir;

  foreach (new FilesystemIterator($currentDir) as $file) {
    $newPath = str_replace($dir, $copyDir, $file->getPath());
    $copy = $newPath . '/' . $file->getBasename();
    $file = $file->getPathname();

    if (in_array($file, $exclude)) {
      continue;
    }

    if (is_dir($file)) {
      mkdir($copy);
      __testprefill_copy_files($dir, $copyDir, $exclude, $file);

      continue;
    }

    copy($file, $copy);
  }
};
